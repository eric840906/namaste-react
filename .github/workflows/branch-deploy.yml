name: 'branch deploy demo'

# The workflow to execute on is comments that are newly created
on:
    issue_comment:
        types: [created]

# Permissions needed for reacting and adding comments for IssueOps commands
permissions:
    pull-requests: write
    deployments: write
    contents: write
    checks: read

jobs:
    compare:
        name: Compare Files
        if: ${{ github.event.issue.pull_request }}
        runs-on: ubuntu-latest
        steps:
            - name: branch-deploy
              uses: github/branch-deploy@v8.0.0
              id: branch-deploy
              with:
                  trigger: '.deploy'
                  environment_targets: "production, QA"
            - name: Get Branch name
              id: get-branch
              run: |
                pr_info=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}")
                branch_sha=$(echo "$pr_info" | jq -r '.head.sha')
                echo "$branch_sha"
                echo "CURRENT_SHA=$branch_sha" >> $GITHUB_ENV

            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  ref: ${{env.CURRENT_SHA}}

            - name: Check Changed Files
              id: changed-files
              run: |
                compare_url="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}/files"
                files_changed=$(curl -s -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$compare_url" | jq -r '.[].filename')
                pr_number=${{ github.event.issue.number }}
                repo=${{ github.repository }}
                owner=${{github.repository_owner}}
                base_sha=${{github.base_ref}}
                head_sha=${{github.head_ref}}
                github_sha=${{github.sha}}
                workflow_sha=${{github.workflow_sha}}
                event_name=${{github.event_name}}

                echo "$files_changed"
            - name: Test Environment
              run: |
                npm echo "${{steps.branch-deploy.outputs.noop}}"